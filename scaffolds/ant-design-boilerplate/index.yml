name: ant-design-boilerplate
git_url: 'git://github.com/espinacs/ant-design-boilerplate.git'
author: espinacs
description: ES6 Ant-Design React boilerplate
tags: []
coverPicture: null
readme: "# ES6 React Ant Design boilerplate using Webpack\r\n\r\n[![Travis](https://img.shields.io/travis/KleoPetroff/react-webpack-boilerplate/master.svg?style=flat-square)](https://github.com/espinacs/ant-design-boilerplate) \r\n\r\nJust and example of ant-design working in React 16: \r\n\r\n\r\n## Starting the dev server\r\n\r\nMake sure you have the latest Stable or LTS version of Node.js installed.\r\n\r\n1. `git clone https://github.com/espinacs/ant-design-boilerplate`\r\n2. Run `npm install` or `yarn install`\r\n3. Start the dev server using `npm start`\r\n3. Open [http://localhost:8080](http://localhost:8080)\r\n\r\n## Available Commands\r\n\r\n- `npm start` - start the dev server\r\n- `npm clean` - delete the dist folder\r\n- `npm run production` - create a production ready build in `dist` folder\r\n- `npm run lint` - execute an eslint check\r\n- `npm test` - run all tests\r\n- `npm run test:watch` - run all tests in watch mode\r\n- `npm run coverage` - generate code coverage report in the `coverage` folder\r\n\r\nAlso, precommit and prepush are both enabled to check all the code is linted and tested.\r\n\r\n## About the architecture\r\n\r\nAlthough this application is really simple (just fetch data, list and filter it) it has a pretty complete architecture, as detailed:\r\n\r\n#### REACT - View Rendering\r\n\r\n[React](https://reactjs.org/) is just the way to display the stored info. Mainly, there's a Main container that dispatches both fetch and filtering events, and at the same times renders the SearchBar (self component) and the Ant Desing Table\r\n\r\n#### REDUX-SAGA - Fetching Data\r\n\r\n[Redux-Saga](https://github.com/redux-saga/redux-saga) is the agent dedicated to fetch data from the server, and dispatches the convenient Redux events with fetched data or errors.\r\n\r\nThis is only a layer that could be changed, for example, by an Apollo GraphQL interface.\r\n\r\n#### REDUX - State Management\r\n\r\n[Redux](https://github.com/reactjs/redux) stores part of the state of the application (a part from the one that each component/containers handles for itself).\r\n\r\n#### RESELECT - Serving Data\r\n\r\nComponents are not subscribed directly to the Redux state. Instead, they only get data from the Redux state through [Reselect](https://github.com/reactjs/reselect) selectors.\r\n\r\nThis way, components/containers and redux are absolutely decoupled, and any other State Manager (Flux, for example) could be used, like any other components library (Vue.js, for example)\r\n\r\n#### Ant Design - Stlyed Components Library\r\n\r\n[Ant Design](https://ant.design/) Gives to the project a small style boost!\r\n\r\n## Code Coverage\r\n\r\nThe project is using the Jest Code Coverage tool. The reports are generated by running `npm run coverage`. All configurations are located in `package.json`, inside the `jest` object.\r\n\r\nThe coverage report consists of an HTML reporter, which can be viewed in the browser and some helper coverage files like the coverage json and xml file.\r\n\r\n## Production code\r\n\r\nRun `npm run production`. The production-ready code will be located under `dist` folder.\r\n\r\n## Licence\r\n\r\n_ant-design-boilerplate_ is available under MIT.\r\n"
deployedAt: 2018-03-24T07:04:55.364Z
