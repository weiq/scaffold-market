name: my-react-app
git_url: 'git://github.com/liviuscn/my-react-app.git'
author: liviuscn
description: 使用官方脚手架搭建的react+react-redux+es6/7/8+react-router+less开发环境
tags: []
coverPicture: null
readme: "# my-react-app\n#使用官方脚手架搭建的react+react-redux+es6/7/8+react-router+less开发环境 使用的eject方法，没有引入ant样式库，图标使用阿里图标\n\n#一、装官方脚手架\n```sh\nnpm install -g create-react-app\n```\n#二、创建项目\n```sh\ncreate-react-app my-react-app\n```\n#三、暴露配置文件\n```sh\nnpm run eject\n```\n#四、安装必备插件\n```sh\nnpm install axios --save\n```\n```sh\nnpm install fastclick --save\n```\n```sh\nnpm install immutable --save\n```\n```sh\nnpm install prop-types --save\n```\n```sh\nnpm install react-addons-css-transition-group --save\n```\n```sh\nnpm install react-redux --save\n```\n```sh\nnpm install redux-logger --dev--save\n```\n```sh\nnpm install react-router-dom --save\n```\n```sh\nnpm install redux --save\n```\n```sh\nnpm install redux-thunk --save\n```\n```sh\nnpm install md5 --save\n```\n```sh\nnpm install moment --save\n```\n```sh\nnpm install babel-plugin-syntax-dynamic-import --save-dev\n```\n```sh\nnpm install babel-plugin-transform-decorators-legacy --save-dev\n```\n```sh\nnpm install babel-polyfill --save-dev\n```\n```sh\nnpm install postcss-px2rem --save-dev\n```\n```sh\nnpm install less-loader --save-dev\n```\n```sh\nnpm install less --save-dev\n```\n#五、修改config文件夹中的配置文件\n```js\nconst paths = require('./paths');\nconst px2rem = require('postcss-px2rem');//--（1）\n\nfunction resolve (dir) {                 //--（2）\n  return path.join(__dirname, '..', dir) //--（3）\n}                                        //--（4）\n```\n```js\noneOf: [\n\t\t...\n\t\t {\n        test: /\\.(js|jsx|mjs)$/,\n        include: paths.appSrc,\n        use: [\n            {\n              loader: require.resolve('babel-loader'),\n                options: {\n                  // @remove-on-eject-begin\n                  babelrc: true,//--（5）\n                  presets: [require.resolve('babel-preset-react-app')],//--（6）\n                  // @remove-on-eject-end\n                  // This is a feature of `babel-loader` for webpack (not Babel itself).\n                  // It enables caching results in ./node_modules/.cache/babel-loader/\n                  // directory for faster rebuilds.\n                  cacheDirectory: true,\n                  plugins: [\"transform-decorators-legacy\"],//--（7）\n                },\n              },\n\t\t\t\t...\n            ]\n      },\n\t  ]\n```\n```js\n{\n  test:/\\.(css|less)$/,//--（8）\n  use: [\n    require.resolve('style-loader'),\n    {\n      loader: require.resolve('css-loader'),\n          options: {\n              importLoaders: 1,\n          },\n    },\n    {\n      loader: require.resolve('postcss-loader'),\n          options: {\n              // Necessary for external CSS imports to work\n              // https://github.com/facebookincubator/create-react-app/issues/2677\n              ident: 'postcss',\n              plugins: () => [\n                require('postcss-flexbugs-fixes'),\n                autoprefixer({\n                  browsers: [\n                        '>1%',\n                        'last 4 versions',\n                        'Firefox ESR',\n                        'not ie < 9', // React doesn't support IE8 anyway\n                  ],\n                      flexbox: 'no-2009',//--（9）\n                }),\n                px2rem({remUnit: 75})//--（10）设计稿根据750px(iphone6)\n                  ],\n                },\n              },\n              {\n                loader: require.resolve('less-loader')  //--（11）\n              },\n          ],\n},\n```\n```js\nalias: {\n\t ...\n\t  '@': resolve('src'),\n}\n```\n```js\nentry: [\n    'babel-polyfill',\n...\n]\n```\n```js \n.bablelrc 文件内容\n{\n  \"presets\": [\"react\"],\n  \"plugins\": [\"syntax-dynamic-import\"]\n}\n```\n#六、配置完成 可以将此项目clone直接使用\n\n#七、规范化\n\n##目录结构\n ```\n my-react-app/\n  README.md\n  node_modules/\n  package.json\n  public/\n    index.html\n    favicon.ico\n  src/\n    api/\n    apps/\n    assets/\n    components/\n    envconfig/\n    style/\n    utils/\n    index.js\n    logo.svg\n    reducers.js\n    routers.js\n    store.js\n ```\n ``` 说明：\n    （1）apps目录下的app都要作为独立可运行的app\n    （2）独立的app包括\n          action-type.js //--使用原始数据类型Symbol()消除魔术字符串\n          index.js\n          action.js\n          reducer.js\n          style.less\n          api.js\n          component目录 自己单独的组件不公用，公用的组件放到src/components目录下\n     （3）将新app的路由写入src/routers.js中\n     （4）将新app的reducer写入src/reducers.js中\n     （5）app的style.less避免样式污染，样式都要包含在[app名称]-contaier中\n     （6）一些工具放到src/utils目录下\n      (7)一些修饰器放到src/decorators目录下下\n      (8)关于接口调用可以在index和action中，推荐写到inde页中，因为index页的方法比较全面，像alert,router,context等都可以直接调用\n```\n\n八、发布\n  \n```\nThe project was built assuming it is hosted at the server root.\nYou can control this with the homepage field in your package.json.\nFor example, add this to build it for GitHub Pages:\n\n  \"homepage\" : \"http://myname.github.io/myapp\",\n\nThe build folder is ready to be deployed.\nYou may serve it with a static server:\n\n  npm install -g serve\n  serve -s build\n\nFind out more about deployment here:\n\n  http://bit.ly/2vY88Kr\n\n  \nThe project was built assuming it is hosted at /my-react-app/.\nYou can control this with the homepage field in your package.json.\n\nThe build folder is ready to be deployed.\nTo publish it at http://liviuscn.github.io/my-react-app, run:\n\n  npm install --save-dev gh-pages\n\nAdd the following script in your package.json.\n\n    // ...\n    \"scripts\": {\n      // ...\n      \"predeploy\": \"npm run build\",\n      \"deploy\": \"gh-pages -d build\"\n    }\n\nThen run:\n\n  npm run deploy\n\nFind out more about deployment here:\n\n  http://bit.ly/2vY88Kr\n```"
deployedAt: 2018-05-11T08:20:23.242Z
